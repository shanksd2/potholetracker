@using Capstone.Web.Models
@using PagedList.Mvc
@model PagedList.IPagedList<Pothole>
@{ int listCount = Model.Count;
    string sort = ViewBag.Sorting;
}



<script src="~/Scripts/viewpothole.js"></script>



<h4 class="headersmall">Reported Potholes</h4>
<div id="wrapper">
    <div id="map"></div>
</div>
<span id="listcount" hidden>@listCount</span>

<div class="dropdown show">
    <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Filter by:
    </a>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
        @if (sort == "DateAsc" || sort == null)
        {
            <a class="dropdown-item" href="~/Home/ViewPotholes/DateDsc">Date▼</a>
        }
        else if (sort == "DateDsc")
        {
            <a class="dropdown-item" href="~/Home/ViewPotholes/DateAsc">Date▲</a>
        }
        else if(sort == "StatusAsc" || sort == null)
        {

        }
        <a class="dropdown-item" href="~/Home/ViewPotholes/Status">Status</a>
        <a class="dropdown-item" href="~/Home/ViewPotholes/Severity">Severity</a>
        <a class="dropdown-item" href="~/Home/ViewPotholes/RepairDate">Repair Date</a>
        <a class="dropdown-item" href="~/Home/ViewPotholes/InspectionDate">Inspection Date</a>
    </div>
</div>




<table class="table">
    <tr>

        <th>Pothole Number</th>
        <th>Latitude/Longitude</th>
        <th>Pothole Status</th>
        <th>Pothole Severity</th>

        <th>Date Reported <a href="~/Home/ViewPotholes/DateAsc">▲</a><a href="~/Home/ViewPotholes/DateDsc">▼</a></th>
        <th>Inspection Date <a href="~/Home/ViewPotholes/InspectionDate">▲</a><a href="~/Home/ViewPotholes/InspectionDateDsc">▼</a></th>
        <th>Repair Date <a href="~/Home/ViewPotholes/RepairDate">▲</a><a href="~/Home/ViewPotholes/RepairDateDsc">▼</a></th>
    </tr>
    @{int count = 0; }
    @foreach (var pothole in Model)
    {
        <span id="hiddenSeverity" hidden>@pothole.Severity</span>
        count++;
        string lat = $"lat{count}";
        string lng = $"lng{count}";
        <tr>
            <td>@pothole.PotholeID</td>
            <td><a href="~/Home/SelectedPothole/@pothole.PotholeID"><span id="@lat">@pothole.Latitude</span>, <span id="@lng">@pothole.Longitude</span></a></td>
            <td>@pothole.Status</td>
            <td>@pothole.ReturnSeverity(pothole.Severity)</td>
            <td>@pothole.DateReported.ToShortDateString() </td>
            @{if (pothole.InspectDate != null && pothole.RepairDate == null)
                {
                    <td>@pothole.InspectDate.Value.ToShortDateString() </td>
                    <td></td>
                }
                else if (pothole.InspectDate != null && pothole.RepairDate != null)
                {
                    <td>@pothole.InspectDate.Value.ToShortDateString() </td>
                    <td>@pothole.RepairDate.Value.ToShortDateString() </td>
                }
                else
                {
                    <td></td>
                    <td></td>
                }
            }
        </tr>
    }

</table>

<div class="pagination">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount   @Html.PagedListPager(Model, page => Url.Action("ViewPotholes", new { page }))
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBSatSYUL3YwnEgUtqsIpU1Cd-mR9OT148&callback=initMap"></script>
